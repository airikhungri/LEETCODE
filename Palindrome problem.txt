/**
 * Definition for singly-linked list.
 * public class ListNode 
     {
 *     public int val;
 *     public ListNode next;

 *     public ListNode(int val=0, ListNode next=null) 
        {
 *         this.val = val;
 *         this.next = next;
 *      }
 *   }
 */
public class Solution 
{
    public bool IsPalindrome(ListNode head) 
    {
        bool IsPalindrome = false;

    ListNode first = head;
    ListNode runner = head;
    int ListNodeLength = 0;

    while(runner.next!=null)
    {
        runner = runner.next;
        ListNodeLength++;
    } 

    ListNode prev = null;
    ListNode head2 = head;
    
    while(head2.next != null)
    {
    ListNode nextNode = head2.next;
    head2.next = prev;
    prev = head2;
    head2 = nextNode;
    }
    
    ListNode mirrornode = head2;

    if(ListNodeLength>0)
    {
    for(int i = 0; i <= ListNodeLength/2;i++)
    {
        if(i!=0)
        {
        first = first.next;
        mirrornode = mirrornode.next;
        }
        if(first.val == mirrornode.val)
        {
            IsPalindrome = true;
        }
        else 
        {
            IsPalindrome = false;
            return IsPalindrome;
        }       
    }
    }
    else 
    IsPalindrome = true;
    
    return IsPalindrome;
    }
}